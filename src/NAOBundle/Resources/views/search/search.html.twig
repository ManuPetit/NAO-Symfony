{# src/NAOBundle/ressources/views/search/search.html.twig #}

{% extends "NAOBundle::layout.html.twig" %}

{% block title %}{{ parent() }} - Rechercher {% endblock %}

{% block body %}

  <!-- FORM SECTION -->
  <div id="rechercher-section" class="py-3">
    <div class="container">
      <div class="row">
        {% if listBirds is defined %}
          {% if listBirds is empty %}
            <div class="col-12 text-center pb-3 alert alert-success">
              Aucun résultat ne correspond à votre recherche !
            </div>
          {% endif %}
        {% endif %}
        <div class="col-12 text-center pb-3">
          <h1>Rechercher une espèce</h1>
        </div>
      </div>
      <div id="observation_form">
          {{ form_start(form) }}
          {{ form_errors(form) }}
          {{ form_row(form.bird) }}
        <div class="row justify-content-around">
          <div class="col-12 col-md-4 py-2">
              {{ form_widget(form.Rechercher, {'attr': {'class': 'btn btn-success btn-block'}}) }}
          </div>
        </div>
          {{ form_rest(form) }}
          {{ form_end(form) }}
      </div>
    </div>
  </div>

  <!-- SHOW RESULTS SECTION -->
  <div id="rechercher-result-section" class="pb-5">
    <div class="container bg-brown">
      <div class="row justify-content-center">
        <div class="col-12 col-md-10 py-3 py-md-5">
          <div id="map"></div>
        </div>
      </div>
      <div class="row justify-content-center text-white">
        <div class="col-12 col-md-8">
          <table class="table table-sm" id="tablemap">
              {% if listBirds is defined %}
                  {% for obs in listBirds %}
                    <tr>
                      <td>{{ obs.date|date('d/m/Y') }}</td>
                      <td>{{ obs.place }}</td>
                      <td>{{ obs.user.login }}</td>
                      <td>
                        <a href="{{ path('nao_observation_show', {'id': obs.id}) }}">
                          <i class="fa fa-arrow-right"></i>
                        </a>
                      </td>
                    </tr>
                  {% endfor %}
              {% endif %}
          </table>
        </div>
      </div>
    </div>
  </div>

  <script>

  var map;
  //tableau vide pour inserer les oiseaux
  var markers = [];

  function initMap() {
    //creation du style de la carte
    styles = [{
      "featureType": "water",
      "elementType": "geometry",
      "stylers": [{
        "visibility": "on"
      },
      {
        "color": "#aee2e0"
      }
    ]
  },
  {
    "featureType": "landscape",
    "elementType": "geometry.fill",
    "stylers": [{
      "color": "#abce83"
    }]
  },
  {
    "featureType": "poi",
    "elementType": "geometry.fill",
    "stylers": [{
      "color": "#769E72"
    }]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text.fill",
    "stylers": [{
      "color": "#7B8758"
    }]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text.stroke",
    "stylers": [{
      "color": "#EBF4A4"
    }]
  },
  {
    "featureType": "poi.park",
    "elementType": "geometry",
    "stylers": [{
      "visibility": "simplified"
    },
    {
      "color": "#8dab68"
    }
  ]
},
{
  "featureType": "road",
  "elementType": "geometry.fill",
  "stylers": [{
    "visibility": "simplified"
  }]
},
{
  "featureType": "road",
  "elementType": "labels.text.fill",
  "stylers": [{
    "color": "#5B5B3F"
  }]
},
{
  "featureType": "road",
  "elementType": "labels.text.stroke",
  "stylers": [{
    "color": "#ABCE83"
  }]
},
{
  "featureType": "road",
  "elementType": "labels.icon",
  "stylers": [{
    "visibility": "off"
  }]
},
{
  "featureType": "road.local",
  "elementType": "geometry",
  "stylers": [{
    "color": "#A4C67D"
  }]
},
{
  "featureType": "road.arterial",
  "elementType": "geometry",
  "stylers": [{
    "color": "#9BBF72"
  }]
},
{
  "featureType": "road.highway",
  "elementType": "geometry",
  "stylers": [{
    "color": "#EBF4A4"
  }]
},
{
  "featureType": "transit",
  "stylers": [{
    "visibility": "off"
  }]
},
{
  "featureType": "administrative",
  "elementType": "geometry.stroke",
  "stylers": [{
    "visibility": "on"
  },
  {
    "color": "#87ae79"
  }
]
},
{
  "featureType": "administrative",
  "elementType": "geometry.fill",
  "stylers": [{
    "color": "#7f2200"
  },
  {
    "visibility": "off"
  }
]
},
{
  "featureType": "administrative",
  "elementType": "labels.text.stroke",
  "stylers": [{
    "color": "#ffffff"
  },
  {
    "visibility": "on"
  },
  {
    "weight": 4.1
  }
]
},
{
  "featureType": "administrative",
  "elementType": "labels.text.fill",
  "stylers": [{
    "color": "#495421"
  }]
},
{
  "featureType": "administrative.neighborhood",
  "elementType": "labels",
  "stylers": [{
    "visibility": "off"
  }]
}
];
//nouvelle carte
map = new google.maps.Map(document.getElementById('map'), {
  center: {
    lat: 48.860100,
    lng: 2.348539
  },
  zoom: 13,
  mapTypeControl: false,
  styles: styles
});

//observations d'oiseaux

      var observations = [
          {% if listBirds is defined %}
          {% for obs in listBirds %}
          {
              title: '{{ obs.title }}',
              lieu: '{{ obs.place }}',
              location: {
                  lat: {{ obs.latitude }},
                  lng: {{ obs.longitude }}
              }
          }
          {% if loop.last %}{% else %},{% endif %}
          {% endfor %}{% endif %}
      ];


// variable pour la fenêtre d'info
var infoWindow = new google.maps.InfoWindow();

//création des markers
for (var i=0; i < observations.length; i++){
  var position = observations[i].location;
  var title = observations[i].title;
  //création du marker
  var marker = new google.maps.Marker({
    position: position,
    title: title,
    animation: google.maps.Animation.DROP,
    id: i
  });
  markers.push(marker);
  //ajout des events sur marker
  marker.addListener('click', function() {
    populateInfoWin(this, infoWindow);
  });
}

//function pour afficher les infos du marker
function populateInfoWin(marker, infoWindow){
  console.log(observations);
  //vérifier que ce n'est pas déjà ouvert
  if (infoWindow.marker != marker){
    infoWindow.marker = marker;
    var id = marker.id;
    var content = '<div>' + marker.title + '</div>';
    content += '<div>Vu à <em>' + observations[id].lieu + '</em></div>' + '<img src="' + observations[id].image + '" alt="' + marker.title + '">';
    infoWindow.setContent(content);
    infoWindow.open(map, marker);
    infoWindow.addListener('closeclick', function(){
      infoWindow.setMarker(null);
    });
  }
}

      {% if listBirds is defined %}
      showOiseaux();
      {% endif %}

function showOiseaux() {
  //show liste
  document.getElementById('tablemap').style.display = 'inline-table';
  var bounds = new google.maps.LatLngBounds();
  //étends les bordures de la carte
  for (var i=0; i<markers.length; i++){
    markers[i].setMap(map);
    bounds.extend(markers[i].position);
  }
  map.fitBounds(bounds);
}

}

</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCTCCkM-6bWoL4S0qxYduwMC6k_aIzgrKg&v=3&callback=initMap"></script>


{% endblock %}